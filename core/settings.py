"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nufk-6wtk^_!kaq26h&d$!%)7-xf)#@8rczi1=z))#7tn)b*lr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["16.16.149.231","api.aniki.uz"]

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    "crispy_forms",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'dj_rest_auth',
    'dj_rest_auth.registration',

    'main',
    'rest_framework_simplejwt',
    'rest_framework.authtoken',
    'drf_yasg',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.dashboard.dashboard_context',  # Dashboard context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'
CORS_ALLOW_ALL_ORIGINS = True
SITE_ID = 1

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )

}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic'
        },
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=180),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "APP": {
            "client_id": "1028453314689-t5o1lj54gd28g1c2sqah30du0udmscrq.apps.googleusercontent.com",
            "secret": "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",
        }
    }
}

JAZZMIN_SETTINGS = {
    "site_title": "AnimeIsh Admin",
    "site_header": "AnimeIsh",
    "site_brand": "AnimeIsh",
    "site_logo": None,
    "login_logo": None,
    "login_logo_dark": None,
    "site_logo_classes": "img-circle",
    "site_icon": None,
    "welcome_sign": "AnimeIsh admin paneliga xush kelibsiz",
    "copyright": "AnimeIsh",
    "search_model": "main.Movie",
    "user_avatar": None,

    "topmenu_links": [

        {"name": "Bosh sahifa",  "url": "admin:index", "permissions": ["auth.view_user"]},

        {"model": "main.User"},

        {"app": "main"},
    ],

    "usermenu_links": [

        {"name": "Profilni ko'rish", "url": "admin:main_user_changelist", "new_window": True},
    ],

    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],
    "order_with_respect_to": ["main", "auth"],

    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "main.User": "fas fa-user",
        "main.Genre": "fas fa-tags",
        "main.Movie": "fas fa-film",
        "main.Banner": "fas fa-image",
        "main.Episode": "fas fa-play-circle",
        "main.Rating": "fas fa-star",
        "main.Bookmark": "fas fa-bookmark",
        "main.UserEpisodeProgress": "fas fa-clock",
        "main.Notification": "fas fa-bell",
    },
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    "related_modal_active": False,

    "custom_css": None,
    "custom_js": None,
    "use_google_fonts_cdn": True,
    "show_ui_builder": False,

    "changeform_format": "horizontal_tabs",
    "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},
}

JAZZMIN_UI_TWEAKS = {
    "footer_fixed": True,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": False,
    "accent": "accent-primary",
    "navbar_small_text": False,
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "actions_sticky_top": False
}

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'uz'
TIME_ZONE = 'Asia/Tashkent'  # siz uchun mosroq
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

import os

STATIC_ROOT = '/var/www/animeish/static/'
MEDIA_ROOT = '/var/www/animeish/media/'

STATIC_URL = '/static/'
MEDIA_URL = '/media/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'akbarkhojayev@gmail.com'
EMAIL_HOST_PASSWORD = 'xserfcdvmmvblzuu'
DEFAULT_FROM_EMAIL = 'Aniki  <akbarkhojayev@gmail.com>'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'main.User'

import os

# BUNNY_STREAM_LIBRARY_ID = "506729"  # Video Library ID
# BUNNY_STREAM_API_KEY = "3cabea06-3957-4759-80bae3dd0901-79aa-4913"  # API Key
# BUNNY_STREAM_CDN_HOSTNAME = "vz-6a963c49-352.b-cdn.net"
# BUNNY_STREAM_UPLOAD_URL = f"https://video.bunnycdn.com/library/{BUNNY_STREAM_LIBRARY_ID}/videos"
#
# BUNNY_BASE_URL = "https://video.bunnycdn.com/library"
# BUNNY_API_KEY = BUNNY_STREAM_API_KEY


# Bunny Storage konfiguratsiyasi
# ⚠️ BUNNY_STORAGE_ZONE va BUNNY_API_KEY ni Bunny Dashboard dan oling
# 1. Bunny.net ga kiring
# 2. Storage > New Storage Zone yaratish
# 3. Storage Zone nomi va API key ni quyidagi formatda kiriting

BUNNY_STORAGE_ZONE = "anikimedia"  # Sizning storage zone nomi
BUNNY_API_KEY = "bdf5b4ba-f6c1-4757-830a1703372a-cd2b-417c"  # Bunny Storage API key (Storage Zone > API dan oling)
BUNNY_STORAGE_URL = f"https://storage.bunnycdn.com/{BUNNY_STORAGE_ZONE}/"
BUNNY_PULL_ZONE_URL = "https://anikimedia.b-cdn.net/"  # Pull Zone URL



CRISPY_TEMPLATE_PACK = 'bootstrap4'
CRISPY_ALLOWED_TEMPLATE_PACKS = ['bootstrap4']

# Vaqtinchalik Celery konfiguratsiyasini o'chirish (Redis o'rnatilmaguncha)
# CELERY_BROKER_URL = "redis://localhost:6379/0"
# CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
